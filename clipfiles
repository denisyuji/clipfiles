#!/usr/bin/env bash

# Usage: ./clipfiles.sh [<path>]

# Default to current directory if no argument is provided
if [ "$#" -eq 0 ]; then
  set -- "."
fi

# Variable to accumulate all output
OUTPUT=""

# Function to check if a file is binary
is_binary() {
  local file="$1"
  [[ "$(file --mime-encoding -b "$file")" != "us-ascii" && "$(file --mime-encoding -b "$file")" != "utf-8" ]]
}

# If the argument is a directory
for ARG in "$@"; do
  if [ -d "$ARG" ]; then
    while IFS= read -r FILE; do
      if ! is_binary "$FILE"; then
        OUTPUT+=$'\n'"$FILE"$'\n'
        OUTPUT+='```'$'\n'
        OUTPUT+="$(cat "$FILE")"$'\n'
        OUTPUT+='```'$'\n'
      else
        echo "Skipping binary file: $FILE"
      fi
    done < <(find "$ARG" -mindepth 1 \( -type d -name '.*' -prune \) -o \( -type f ! -iname '*README*' ! -iname '*LICENSE*' -print \))
  elif [ -f "$ARG" ]; then
    if ! is_binary "$ARG"; then
      OUTPUT+=$'\n'"$ARG"$'\n'
      OUTPUT+='```'$'\n'
      OUTPUT+="$(cat "$ARG")"$'\n'
      OUTPUT+='```'$'\n'
    else
      echo "Skipping binary file: $ARG"
    fi
  else
    echo "Invalid path: $ARG"
  fi
done

# Copy to clipboard if OUTPUT is not empty
if [[ -n "$OUTPUT" ]]; then
  echo "$OUTPUT" | xclip -selection clipboard
  echo "Copied to clipboard."
else
  echo "No text files found to copy."
fi
